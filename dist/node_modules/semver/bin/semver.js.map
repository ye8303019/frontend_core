{"version":3,"sources":["../../../../node_modules/semver/bin/semver"],"names":["argv","process","slice","versions","range","inc","version","require","loose","includePrerelease","coerce","identifier","semver","reverse","options","main","length","help","a","shift","indexOfEqualSign","indexOf","unshift","push","map","v","filter","valid","fail","failInc","i","l","satisfies","success","console","error","exit","compare","sort","b","clean","forEach","_","log","join"],"mappings":"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","file":"semver.js","sourcesContent":["\n// Standalone semver comparison program.\n// Exits successfully and prints matching version(s) if\n// any supplied version is valid and passes all tests.\n\nvar argv = process.argv.slice(2)\n\nvar versions = []\n\nvar range = []\n\nvar inc = null\n\nvar version = require('../package.json').version\n\nvar loose = false\n\nvar includePrerelease = false\n\nvar coerce = false\n\nvar identifier\n\nvar semver = require('../semver')\n\nvar reverse = false\n\nvar options = {}\n\nmain()\n\nfunction main () {\n  if (!argv.length) return help()\n  while (argv.length) {\n    var a = argv.shift()\n    var indexOfEqualSign = a.indexOf('=')\n    if (indexOfEqualSign !== -1) {\n      a = a.slice(0, indexOfEqualSign)\n      argv.unshift(a.slice(indexOfEqualSign + 1))\n    }\n    switch (a) {\n      case '-rv': case '-rev': case '--rev': case '--reverse':\n        reverse = true\n        break\n      case '-l': case '--loose':\n        loose = true\n        break\n      case '-p': case '--include-prerelease':\n        includePrerelease = true\n        break\n      case '-v': case '--version':\n        versions.push(argv.shift())\n        break\n      case '-i': case '--inc': case '--increment':\n        switch (argv[0]) {\n          case 'major': case 'minor': case 'patch': case 'prerelease':\n          case 'premajor': case 'preminor': case 'prepatch':\n            inc = argv.shift()\n            break\n          default:\n            inc = 'patch'\n            break\n        }\n        break\n      case '--preid':\n        identifier = argv.shift()\n        break\n      case '-r': case '--range':\n        range.push(argv.shift())\n        break\n      case '-c': case '--coerce':\n        coerce = true\n        break\n      case '-h': case '--help': case '-?':\n        return help()\n      default:\n        versions.push(a)\n        break\n    }\n  }\n\n  var options = { loose: loose, includePrerelease: includePrerelease }\n\n  versions = versions.map(function (v) {\n    return coerce ? (semver.coerce(v) || { version: v }).version : v\n  }).filter(function (v) {\n    return semver.valid(v)\n  })\n  if (!versions.length) return fail()\n  if (inc && (versions.length !== 1 || range.length)) { return failInc() }\n\n  for (var i = 0, l = range.length; i < l; i++) {\n    versions = versions.filter(function (v) {\n      return semver.satisfies(v, range[i], options)\n    })\n    if (!versions.length) return fail()\n  }\n  return success(versions)\n}\n\nfunction failInc () {\n  console.error('--inc can only be used on a single version with no range')\n  fail()\n}\n\nfunction fail () { process.exit(1) }\n\nfunction success () {\n  var compare = reverse ? 'rcompare' : 'compare'\n  versions.sort(function (a, b) {\n    return semver[compare](a, b, options)\n  }).map(function (v) {\n    return semver.clean(v, options)\n  }).map(function (v) {\n    return inc ? semver.inc(v, inc, options, identifier) : v\n  }).forEach(function (v, i, _) { console.log(v) })\n}\n\nfunction help () {\n  console.log(['SemVer ' + version,\n    '',\n    'A JavaScript implementation of the https://semver.org/ specification',\n    'Copyright Isaac Z. Schlueter',\n    '',\n    'Usage: semver [options] <version> [<version> [...]]',\n    'Prints valid versions sorted by SemVer precedence',\n    '',\n    'Options:',\n    '-r --range <range>',\n    '        Print versions that match the specified range.',\n    '',\n    '-i --increment [<level>]',\n    '        Increment a version by the specified level.  Level can',\n    '        be one of: major, minor, patch, premajor, preminor,',\n    \"        prepatch, or prerelease.  Default level is 'patch'.\",\n    '        Only one version may be specified.',\n    '',\n    '--preid <identifier>',\n    '        Identifier to be used to prefix premajor, preminor,',\n    '        prepatch or prerelease version increments.',\n    '',\n    '-l --loose',\n    '        Interpret versions and ranges loosely',\n    '',\n    '-p --include-prerelease',\n    '        Always include prerelease versions in range matching',\n    '',\n    '-c --coerce',\n    '        Coerce a string into SemVer if possible',\n    '        (does not imply --loose)',\n    '',\n    'Program exits successfully if any valid version satisfies',\n    'all supplied ranges, and prints all satisfying versions.',\n    '',\n    'If no satisfying versions are found, then exits failure.',\n    '',\n    'Versions are printed in ascending order, so supplying',\n    'multiple versions to the utility will just sort them.'\n  ].join('\\n'))\n}\n"]}