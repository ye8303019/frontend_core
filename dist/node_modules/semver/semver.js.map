{"version":3,"sources":["../../../node_modules/semver/semver.js"],"names":["exports","module","SemVer","debug","process","env","NODE_DEBUG","test","args","Array","prototype","slice","call","arguments","unshift","console","log","apply","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","Number","MAX_SAFE_COMPONENT_LENGTH","re","src","R","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULL","FULLPLAIN","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","LONETILDE","TILDETRIM","RegExp","tildeTrimReplace","TILDE","TILDELOOSE","LONECARET","CARETTRIM","caretTrimReplace","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","comparatorTrimReplace","HYPHENRANGE","HYPHENRANGELOOSE","STAR","i","parse","version","options","loose","includePrerelease","length","r","er","valid","v","clean","s","trim","replace","TypeError","m","match","raw","major","minor","patch","prerelease","split","map","id","num","build","format","join","toString","compare","other","compareMain","comparePre","compareIdentifiers","a","b","undefined","inc","release","identifier","push","isNaN","Error","diff","version1","version2","eq","v1","v2","prefix","defaultResult","key","numeric","anum","bnum","rcompareIdentifiers","compareLoose","rcompare","sort","list","rsort","gt","lt","neq","gte","lte","cmp","op","Comparator","comp","value","semver","ANY","operator","intersects","rangeTmp","Range","satisfies","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","range","set","parseRange","filter","c","comps","hr","hyphenReplace","compRe","parseComparator","some","thisComparators","every","thisComparator","rangeComparators","rangeComparator","toComparators","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","_","M","p","pr","ret","replaceCaret","replaceXRange","gtlt","xM","xm","xp","anyX","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","maxSatisfying","versions","max","maxSV","rangeObj","forEach","minSatisfying","min","minSV","minVersion","minver","comparators","comparator","compver","validRange","ltr","outside","gtr","hilo","gtfn","ltefn","ltfn","ecomp","high","low","parsed","r1","r2","coerce"],"mappings":";;;;AAAAA,UAAUC,OAAOD,OAAP,GAAiBE,MAA3B;;AAEA,IAAIC,KAAJ;AACA;AACA,IAAI,QAAOC,OAAP,yCAAOA,OAAP,OAAmB,QAAnB,IACAA,QAAQC,GADR,IAEAD,QAAQC,GAAR,CAAYC,UAFZ,IAGA,cAAcC,IAAd,CAAmBH,QAAQC,GAAR,CAAYC,UAA/B,CAHJ,EAGgD;AAC9CH,UAAQ,iBAAY;AAClB,QAAIK,OAAOC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAX;AACAL,SAAKM,OAAL,CAAa,QAAb;AACAC,YAAQC,GAAR,CAAYC,KAAZ,CAAkBF,OAAlB,EAA2BP,IAA3B;AACD,GAJD;AAKD,CATD,MASO;AACLL,UAAQ,iBAAY,CAAE,CAAtB;AACD;;AAED;AACA;AACAH,QAAQkB,mBAAR,GAA8B,OAA9B;;AAEA,IAAIC,aAAa,GAAjB;AACA,IAAIC,mBAAmBC,OAAOD,gBAAP;AACrB,0BAA2B,gBAD7B;;AAGA;AACA,IAAIE,4BAA4B,EAAhC;;AAEA;AACA,IAAIC,KAAKvB,QAAQuB,EAAR,GAAa,EAAtB;AACA,IAAIC,MAAMxB,QAAQwB,GAAR,GAAc,EAAxB;AACA,IAAIC,IAAI,CAAR;;AAEA;AACA;;AAEA;AACA;;AAEA,IAAIC,oBAAoBD,GAAxB;AACAD,IAAIE,iBAAJ,IAAyB,aAAzB;AACA,IAAIC,yBAAyBF,GAA7B;AACAD,IAAIG,sBAAJ,IAA8B,QAA9B;;AAEA;AACA;AACA;;AAEA,IAAIC,uBAAuBH,GAA3B;AACAD,IAAII,oBAAJ,IAA4B,4BAA5B;;AAEA;AACA;;AAEA,IAAIC,cAAcJ,GAAlB;AACAD,IAAIK,WAAJ,IAAmB,MAAML,IAAIE,iBAAJ,CAAN,GAA+B,MAA/B,GACA,GADA,GACMF,IAAIE,iBAAJ,CADN,GAC+B,MAD/B,GAEA,GAFA,GAEMF,IAAIE,iBAAJ,CAFN,GAE+B,GAFlD;;AAIA,IAAII,mBAAmBL,GAAvB;AACAD,IAAIM,gBAAJ,IAAwB,MAAMN,IAAIG,sBAAJ,CAAN,GAAoC,MAApC,GACA,GADA,GACMH,IAAIG,sBAAJ,CADN,GACoC,MADpC,GAEA,GAFA,GAEMH,IAAIG,sBAAJ,CAFN,GAEoC,GAF5D;;AAIA;AACA;;AAEA,IAAII,uBAAuBN,GAA3B;AACAD,IAAIO,oBAAJ,IAA4B,QAAQP,IAAIE,iBAAJ,CAAR,GACA,GADA,GACMF,IAAII,oBAAJ,CADN,GACkC,GAD9D;;AAGA,IAAII,4BAA4BP,GAAhC;AACAD,IAAIQ,yBAAJ,IAAiC,QAAQR,IAAIG,sBAAJ,CAAR,GACA,GADA,GACMH,IAAII,oBAAJ,CADN,GACkC,GADnE;;AAGA;AACA;AACA;;AAEA,IAAIK,aAAaR,GAAjB;AACAD,IAAIS,UAAJ,IAAkB,UAAUT,IAAIO,oBAAJ,CAAV,GACA,QADA,GACWP,IAAIO,oBAAJ,CADX,GACuC,MADzD;;AAGA,IAAIG,kBAAkBT,GAAtB;AACAD,IAAIU,eAAJ,IAAuB,WAAWV,IAAIQ,yBAAJ,CAAX,GACA,QADA,GACWR,IAAIQ,yBAAJ,CADX,GAC4C,MADnE;;AAGA;AACA;;AAEA,IAAIG,kBAAkBV,GAAtB;AACAD,IAAIW,eAAJ,IAAuB,eAAvB;;AAEA;AACA;AACA;;AAEA,IAAIC,QAAQX,GAAZ;AACAD,IAAIY,KAAJ,IAAa,YAAYZ,IAAIW,eAAJ,CAAZ,GACA,QADA,GACWX,IAAIW,eAAJ,CADX,GACkC,MAD/C;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAIE,OAAOZ,GAAX;AACA,IAAIa,YAAY,OAAOd,IAAIK,WAAJ,CAAP,GACAL,IAAIS,UAAJ,CADA,GACkB,GADlB,GAEAT,IAAIY,KAAJ,CAFA,GAEa,GAF7B;;AAIAZ,IAAIa,IAAJ,IAAY,MAAMC,SAAN,GAAkB,GAA9B;;AAEA;AACA;AACA;AACA,IAAIC,aAAa,aAAaf,IAAIM,gBAAJ,CAAb,GACAN,IAAIU,eAAJ,CADA,GACuB,GADvB,GAEAV,IAAIY,KAAJ,CAFA,GAEa,GAF9B;;AAIA,IAAII,QAAQf,GAAZ;AACAD,IAAIgB,KAAJ,IAAa,MAAMD,UAAN,GAAmB,GAAhC;;AAEA,IAAIE,OAAOhB,GAAX;AACAD,IAAIiB,IAAJ,IAAY,cAAZ;;AAEA;AACA;AACA;AACA,IAAIC,wBAAwBjB,GAA5B;AACAD,IAAIkB,qBAAJ,IAA6BlB,IAAIG,sBAAJ,IAA8B,UAA3D;AACA,IAAIgB,mBAAmBlB,GAAvB;AACAD,IAAImB,gBAAJ,IAAwBnB,IAAIE,iBAAJ,IAAyB,UAAjD;;AAEA,IAAIkB,cAAcnB,GAAlB;AACAD,IAAIoB,WAAJ,IAAmB,cAAcpB,IAAImB,gBAAJ,CAAd,GAAsC,GAAtC,GACA,SADA,GACYnB,IAAImB,gBAAJ,CADZ,GACoC,GADpC,GAEA,SAFA,GAEYnB,IAAImB,gBAAJ,CAFZ,GAEoC,GAFpC,GAGA,KAHA,GAGQnB,IAAIS,UAAJ,CAHR,GAG0B,IAH1B,GAIAT,IAAIY,KAAJ,CAJA,GAIa,GAJb,GAKA,MALnB;;AAOA,IAAIS,mBAAmBpB,GAAvB;AACAD,IAAIqB,gBAAJ,IAAwB,cAAcrB,IAAIkB,qBAAJ,CAAd,GAA2C,GAA3C,GACA,SADA,GACYlB,IAAIkB,qBAAJ,CADZ,GACyC,GADzC,GAEA,SAFA,GAEYlB,IAAIkB,qBAAJ,CAFZ,GAEyC,GAFzC,GAGA,KAHA,GAGQlB,IAAIU,eAAJ,CAHR,GAG+B,IAH/B,GAIAV,IAAIY,KAAJ,CAJA,GAIa,GAJb,GAKA,MALxB;;AAOA,IAAIU,SAASrB,GAAb;AACAD,IAAIsB,MAAJ,IAAc,MAAMtB,IAAIiB,IAAJ,CAAN,GAAkB,MAAlB,GAA2BjB,IAAIoB,WAAJ,CAA3B,GAA8C,GAA5D;AACA,IAAIG,cAActB,GAAlB;AACAD,IAAIuB,WAAJ,IAAmB,MAAMvB,IAAIiB,IAAJ,CAAN,GAAkB,MAAlB,GAA2BjB,IAAIqB,gBAAJ,CAA3B,GAAmD,GAAtE;;AAEA;AACA;AACA,IAAIG,SAASvB,GAAb;AACAD,IAAIwB,MAAJ,IAAc,iBACA,SADA,GACY1B,yBADZ,GACwC,IADxC,GAEA,eAFA,GAEkBA,yBAFlB,GAE8C,MAF9C,GAGA,eAHA,GAGkBA,yBAHlB,GAG8C,MAH9C,GAIA,cAJd;;AAMA;AACA;AACA,IAAI2B,YAAYxB,GAAhB;AACAD,IAAIyB,SAAJ,IAAiB,SAAjB;;AAEA,IAAIC,YAAYzB,GAAhB;AACAD,IAAI0B,SAAJ,IAAiB,WAAW1B,IAAIyB,SAAJ,CAAX,GAA4B,MAA7C;AACA1B,GAAG2B,SAAH,IAAgB,IAAIC,MAAJ,CAAW3B,IAAI0B,SAAJ,CAAX,EAA2B,GAA3B,CAAhB;AACA,IAAIE,mBAAmB,KAAvB;;AAEA,IAAIC,QAAQ5B,GAAZ;AACAD,IAAI6B,KAAJ,IAAa,MAAM7B,IAAIyB,SAAJ,CAAN,GAAuBzB,IAAIoB,WAAJ,CAAvB,GAA0C,GAAvD;AACA,IAAIU,aAAa7B,GAAjB;AACAD,IAAI8B,UAAJ,IAAkB,MAAM9B,IAAIyB,SAAJ,CAAN,GAAuBzB,IAAIqB,gBAAJ,CAAvB,GAA+C,GAAjE;;AAEA;AACA;AACA,IAAIU,YAAY9B,GAAhB;AACAD,IAAI+B,SAAJ,IAAiB,SAAjB;;AAEA,IAAIC,YAAY/B,GAAhB;AACAD,IAAIgC,SAAJ,IAAiB,WAAWhC,IAAI+B,SAAJ,CAAX,GAA4B,MAA7C;AACAhC,GAAGiC,SAAH,IAAgB,IAAIL,MAAJ,CAAW3B,IAAIgC,SAAJ,CAAX,EAA2B,GAA3B,CAAhB;AACA,IAAIC,mBAAmB,KAAvB;;AAEA,IAAIC,QAAQjC,GAAZ;AACAD,IAAIkC,KAAJ,IAAa,MAAMlC,IAAI+B,SAAJ,CAAN,GAAuB/B,IAAIoB,WAAJ,CAAvB,GAA0C,GAAvD;AACA,IAAIe,aAAalC,GAAjB;AACAD,IAAImC,UAAJ,IAAkB,MAAMnC,IAAI+B,SAAJ,CAAN,GAAuB/B,IAAIqB,gBAAJ,CAAvB,GAA+C,GAAjE;;AAEA;AACA,IAAIe,kBAAkBnC,GAAtB;AACAD,IAAIoC,eAAJ,IAAuB,MAAMpC,IAAIiB,IAAJ,CAAN,GAAkB,OAAlB,GAA4BF,UAA5B,GAAyC,OAAhE;AACA,IAAIsB,aAAapC,GAAjB;AACAD,IAAIqC,UAAJ,IAAkB,MAAMrC,IAAIiB,IAAJ,CAAN,GAAkB,OAAlB,GAA4BH,SAA5B,GAAwC,OAA1D;;AAEA;AACA;AACA,IAAIwB,iBAAiBrC,GAArB;AACAD,IAAIsC,cAAJ,IAAsB,WAAWtC,IAAIiB,IAAJ,CAAX,GACA,OADA,GACUF,UADV,GACuB,GADvB,GAC6Bf,IAAIoB,WAAJ,CAD7B,GACgD,GADtE;;AAGA;AACArB,GAAGuC,cAAH,IAAqB,IAAIX,MAAJ,CAAW3B,IAAIsC,cAAJ,CAAX,EAAgC,GAAhC,CAArB;AACA,IAAIC,wBAAwB,QAA5B;;AAEA;AACA;AACA;AACA;AACA,IAAIC,cAAcvC,GAAlB;AACAD,IAAIwC,WAAJ,IAAmB,WAAWxC,IAAIoB,WAAJ,CAAX,GAA8B,GAA9B,GACA,WADA,GAEA,GAFA,GAEMpB,IAAIoB,WAAJ,CAFN,GAEyB,GAFzB,GAGA,OAHnB;;AAKA,IAAIqB,mBAAmBxC,GAAvB;AACAD,IAAIyC,gBAAJ,IAAwB,WAAWzC,IAAIqB,gBAAJ,CAAX,GAAmC,GAAnC,GACA,WADA,GAEA,GAFA,GAEMrB,IAAIqB,gBAAJ,CAFN,GAE8B,GAF9B,GAGA,OAHxB;;AAKA;AACA,IAAIqB,OAAOzC,GAAX;AACAD,IAAI0C,IAAJ,IAAY,iBAAZ;;AAEA;AACA;AACA,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI1C,CAApB,EAAuB0C,GAAvB,EAA4B;AAC1BhE,QAAMgE,CAAN,EAAS3C,IAAI2C,CAAJ,CAAT;AACA,MAAI,CAAC5C,GAAG4C,CAAH,CAAL,EAAY;AACV5C,OAAG4C,CAAH,IAAQ,IAAIhB,MAAJ,CAAW3B,IAAI2C,CAAJ,CAAX,CAAR;AACD;AACF;;AAEDnE,QAAQoE,KAAR,GAAgBA,KAAhB;AACA,SAASA,KAAT,CAAgBC,OAAhB,EAAyBC,OAAzB,EAAkC;AAChC,MAAI,CAACA,OAAD,IAAY,QAAOA,OAAP,yCAAOA,OAAP,OAAmB,QAAnC,EAA6C;AAC3CA,cAAU;AACRC,aAAO,CAAC,CAACD,OADD;AAERE,yBAAmB;AAFX,KAAV;AAID;;AAED,MAAIH,mBAAmBnE,MAAvB,EAA+B;AAC7B,WAAOmE,OAAP;AACD;;AAED,MAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,WAAO,IAAP;AACD;;AAED,MAAIA,QAAQI,MAAR,GAAiBtD,UAArB,EAAiC;AAC/B,WAAO,IAAP;AACD;;AAED,MAAIuD,IAAIJ,QAAQC,KAAR,GAAgBhD,GAAGiB,KAAH,CAAhB,GAA4BjB,GAAGc,IAAH,CAApC;AACA,MAAI,CAACqC,EAAEnE,IAAF,CAAO8D,OAAP,CAAL,EAAsB;AACpB,WAAO,IAAP;AACD;;AAED,MAAI;AACF,WAAO,IAAInE,MAAJ,CAAWmE,OAAX,EAAoBC,OAApB,CAAP;AACD,GAFD,CAEE,OAAOK,EAAP,EAAW;AACX,WAAO,IAAP;AACD;AACF;;AAED3E,QAAQ4E,KAAR,GAAgBA,KAAhB;AACA,SAASA,KAAT,CAAgBP,OAAhB,EAAyBC,OAAzB,EAAkC;AAChC,MAAIO,IAAIT,MAAMC,OAAN,EAAeC,OAAf,CAAR;AACA,SAAOO,IAAIA,EAAER,OAAN,GAAgB,IAAvB;AACD;;AAEDrE,QAAQ8E,KAAR,GAAgBA,KAAhB;AACA,SAASA,KAAT,CAAgBT,OAAhB,EAAyBC,OAAzB,EAAkC;AAChC,MAAIS,IAAIX,MAAMC,QAAQW,IAAR,GAAeC,OAAf,CAAuB,QAAvB,EAAiC,EAAjC,CAAN,EAA4CX,OAA5C,CAAR;AACA,SAAOS,IAAIA,EAAEV,OAAN,GAAgB,IAAvB;AACD;;AAEDrE,QAAQE,MAAR,GAAiBA,MAAjB;;AAEA,SAASA,MAAT,CAAiBmE,OAAjB,EAA0BC,OAA1B,EAAmC;AACjC,MAAI,CAACA,OAAD,IAAY,QAAOA,OAAP,yCAAOA,OAAP,OAAmB,QAAnC,EAA6C;AAC3CA,cAAU;AACRC,aAAO,CAAC,CAACD,OADD;AAERE,yBAAmB;AAFX,KAAV;AAID;AACD,MAAIH,mBAAmBnE,MAAvB,EAA+B;AAC7B,QAAImE,QAAQE,KAAR,KAAkBD,QAAQC,KAA9B,EAAqC;AACnC,aAAOF,OAAP;AACD,KAFD,MAEO;AACLA,gBAAUA,QAAQA,OAAlB;AACD;AACF,GAND,MAMO,IAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AACtC,UAAM,IAAIa,SAAJ,CAAc,sBAAsBb,OAApC,CAAN;AACD;;AAED,MAAIA,QAAQI,MAAR,GAAiBtD,UAArB,EAAiC;AAC/B,UAAM,IAAI+D,SAAJ,CAAc,4BAA4B/D,UAA5B,GAAyC,aAAvD,CAAN;AACD;;AAED,MAAI,EAAE,gBAAgBjB,MAAlB,CAAJ,EAA+B;AAC7B,WAAO,IAAIA,MAAJ,CAAWmE,OAAX,EAAoBC,OAApB,CAAP;AACD;;AAEDnE,QAAM,QAAN,EAAgBkE,OAAhB,EAAyBC,OAAzB;AACA,OAAKA,OAAL,GAAeA,OAAf;AACA,OAAKC,KAAL,GAAa,CAAC,CAACD,QAAQC,KAAvB;;AAEA,MAAIY,IAAId,QAAQW,IAAR,GAAeI,KAAf,CAAqBd,QAAQC,KAAR,GAAgBhD,GAAGiB,KAAH,CAAhB,GAA4BjB,GAAGc,IAAH,CAAjD,CAAR;;AAEA,MAAI,CAAC8C,CAAL,EAAQ;AACN,UAAM,IAAID,SAAJ,CAAc,sBAAsBb,OAApC,CAAN;AACD;;AAED,OAAKgB,GAAL,GAAWhB,OAAX;;AAEA;AACA,OAAKiB,KAAL,GAAa,CAACH,EAAE,CAAF,CAAd;AACA,OAAKI,KAAL,GAAa,CAACJ,EAAE,CAAF,CAAd;AACA,OAAKK,KAAL,GAAa,CAACL,EAAE,CAAF,CAAd;;AAEA,MAAI,KAAKG,KAAL,GAAalE,gBAAb,IAAiC,KAAKkE,KAAL,GAAa,CAAlD,EAAqD;AACnD,UAAM,IAAIJ,SAAJ,CAAc,uBAAd,CAAN;AACD;;AAED,MAAI,KAAKK,KAAL,GAAanE,gBAAb,IAAiC,KAAKmE,KAAL,GAAa,CAAlD,EAAqD;AACnD,UAAM,IAAIL,SAAJ,CAAc,uBAAd,CAAN;AACD;;AAED,MAAI,KAAKM,KAAL,GAAapE,gBAAb,IAAiC,KAAKoE,KAAL,GAAa,CAAlD,EAAqD;AACnD,UAAM,IAAIN,SAAJ,CAAc,uBAAd,CAAN;AACD;;AAED;AACA,MAAI,CAACC,EAAE,CAAF,CAAL,EAAW;AACT,SAAKM,UAAL,GAAkB,EAAlB;AACD,GAFD,MAEO;AACL,SAAKA,UAAL,GAAkBN,EAAE,CAAF,EAAKO,KAAL,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,UAAUC,EAAV,EAAc;AAClD,UAAI,WAAWrF,IAAX,CAAgBqF,EAAhB,CAAJ,EAAyB;AACvB,YAAIC,MAAM,CAACD,EAAX;AACA,YAAIC,OAAO,CAAP,IAAYA,MAAMzE,gBAAtB,EAAwC;AACtC,iBAAOyE,GAAP;AACD;AACF;AACD,aAAOD,EAAP;AACD,KARiB,CAAlB;AASD;;AAED,OAAKE,KAAL,GAAaX,EAAE,CAAF,IAAOA,EAAE,CAAF,EAAKO,KAAL,CAAW,GAAX,CAAP,GAAyB,EAAtC;AACA,OAAKK,MAAL;AACD;;AAED7F,OAAOQ,SAAP,CAAiBqF,MAAjB,GAA0B,YAAY;AACpC,OAAK1B,OAAL,GAAe,KAAKiB,KAAL,GAAa,GAAb,GAAmB,KAAKC,KAAxB,GAAgC,GAAhC,GAAsC,KAAKC,KAA1D;AACA,MAAI,KAAKC,UAAL,CAAgBhB,MAApB,EAA4B;AAC1B,SAAKJ,OAAL,IAAgB,MAAM,KAAKoB,UAAL,CAAgBO,IAAhB,CAAqB,GAArB,CAAtB;AACD;AACD,SAAO,KAAK3B,OAAZ;AACD,CAND;;AAQAnE,OAAOQ,SAAP,CAAiBuF,QAAjB,GAA4B,YAAY;AACtC,SAAO,KAAK5B,OAAZ;AACD,CAFD;;AAIAnE,OAAOQ,SAAP,CAAiBwF,OAAjB,GAA2B,UAAUC,KAAV,EAAiB;AAC1ChG,QAAM,gBAAN,EAAwB,KAAKkE,OAA7B,EAAsC,KAAKC,OAA3C,EAAoD6B,KAApD;AACA,MAAI,EAAEA,iBAAiBjG,MAAnB,CAAJ,EAAgC;AAC9BiG,YAAQ,IAAIjG,MAAJ,CAAWiG,KAAX,EAAkB,KAAK7B,OAAvB,CAAR;AACD;;AAED,SAAO,KAAK8B,WAAL,CAAiBD,KAAjB,KAA2B,KAAKE,UAAL,CAAgBF,KAAhB,CAAlC;AACD,CAPD;;AASAjG,OAAOQ,SAAP,CAAiB0F,WAAjB,GAA+B,UAAUD,KAAV,EAAiB;AAC9C,MAAI,EAAEA,iBAAiBjG,MAAnB,CAAJ,EAAgC;AAC9BiG,YAAQ,IAAIjG,MAAJ,CAAWiG,KAAX,EAAkB,KAAK7B,OAAvB,CAAR;AACD;;AAED,SAAOgC,mBAAmB,KAAKhB,KAAxB,EAA+Ba,MAAMb,KAArC,KACAgB,mBAAmB,KAAKf,KAAxB,EAA+BY,MAAMZ,KAArC,CADA,IAEAe,mBAAmB,KAAKd,KAAxB,EAA+BW,MAAMX,KAArC,CAFP;AAGD,CARD;;AAUAtF,OAAOQ,SAAP,CAAiB2F,UAAjB,GAA8B,UAAUF,KAAV,EAAiB;AAC7C,MAAI,EAAEA,iBAAiBjG,MAAnB,CAAJ,EAAgC;AAC9BiG,YAAQ,IAAIjG,MAAJ,CAAWiG,KAAX,EAAkB,KAAK7B,OAAvB,CAAR;AACD;;AAED;AACA,MAAI,KAAKmB,UAAL,CAAgBhB,MAAhB,IAA0B,CAAC0B,MAAMV,UAAN,CAAiBhB,MAAhD,EAAwD;AACtD,WAAO,CAAC,CAAR;AACD,GAFD,MAEO,IAAI,CAAC,KAAKgB,UAAL,CAAgBhB,MAAjB,IAA2B0B,MAAMV,UAAN,CAAiBhB,MAAhD,EAAwD;AAC7D,WAAO,CAAP;AACD,GAFM,MAEA,IAAI,CAAC,KAAKgB,UAAL,CAAgBhB,MAAjB,IAA2B,CAAC0B,MAAMV,UAAN,CAAiBhB,MAAjD,EAAyD;AAC9D,WAAO,CAAP;AACD;;AAED,MAAIN,IAAI,CAAR;AACA,KAAG;AACD,QAAIoC,IAAI,KAAKd,UAAL,CAAgBtB,CAAhB,CAAR;AACA,QAAIqC,IAAIL,MAAMV,UAAN,CAAiBtB,CAAjB,CAAR;AACAhE,UAAM,oBAAN,EAA4BgE,CAA5B,EAA+BoC,CAA/B,EAAkCC,CAAlC;AACA,QAAID,MAAME,SAAN,IAAmBD,MAAMC,SAA7B,EAAwC;AACtC,aAAO,CAAP;AACD,KAFD,MAEO,IAAID,MAAMC,SAAV,EAAqB;AAC1B,aAAO,CAAP;AACD,KAFM,MAEA,IAAIF,MAAME,SAAV,EAAqB;AAC1B,aAAO,CAAC,CAAR;AACD,KAFM,MAEA,IAAIF,MAAMC,CAAV,EAAa;AAClB;AACD,KAFM,MAEA;AACL,aAAOF,mBAAmBC,CAAnB,EAAsBC,CAAtB,CAAP;AACD;AACF,GAfD,QAeS,EAAErC,CAfX;AAgBD,CA/BD;;AAiCA;AACA;AACAjE,OAAOQ,SAAP,CAAiBgG,GAAjB,GAAuB,UAAUC,OAAV,EAAmBC,UAAnB,EAA+B;AACpD,UAAQD,OAAR;AACE,SAAK,UAAL;AACE,WAAKlB,UAAL,CAAgBhB,MAAhB,GAAyB,CAAzB;AACA,WAAKe,KAAL,GAAa,CAAb;AACA,WAAKD,KAAL,GAAa,CAAb;AACA,WAAKD,KAAL;AACA,WAAKoB,GAAL,CAAS,KAAT,EAAgBE,UAAhB;AACA;AACF,SAAK,UAAL;AACE,WAAKnB,UAAL,CAAgBhB,MAAhB,GAAyB,CAAzB;AACA,WAAKe,KAAL,GAAa,CAAb;AACA,WAAKD,KAAL;AACA,WAAKmB,GAAL,CAAS,KAAT,EAAgBE,UAAhB;AACA;AACF,SAAK,UAAL;AACE;AACA;AACA;AACA,WAAKnB,UAAL,CAAgBhB,MAAhB,GAAyB,CAAzB;AACA,WAAKiC,GAAL,CAAS,OAAT,EAAkBE,UAAlB;AACA,WAAKF,GAAL,CAAS,KAAT,EAAgBE,UAAhB;AACA;AACF;AACA;AACA,SAAK,YAAL;AACE,UAAI,KAAKnB,UAAL,CAAgBhB,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,aAAKiC,GAAL,CAAS,OAAT,EAAkBE,UAAlB;AACD;AACD,WAAKF,GAAL,CAAS,KAAT,EAAgBE,UAAhB;AACA;;AAEF,SAAK,OAAL;AACE;AACA;AACA;AACA;AACA,UAAI,KAAKrB,KAAL,KAAe,CAAf,IACA,KAAKC,KAAL,KAAe,CADf,IAEA,KAAKC,UAAL,CAAgBhB,MAAhB,KAA2B,CAF/B,EAEkC;AAChC,aAAKa,KAAL;AACD;AACD,WAAKC,KAAL,GAAa,CAAb;AACA,WAAKC,KAAL,GAAa,CAAb;AACA,WAAKC,UAAL,GAAkB,EAAlB;AACA;AACF,SAAK,OAAL;AACE;AACA;AACA;AACA;AACA,UAAI,KAAKD,KAAL,KAAe,CAAf,IAAoB,KAAKC,UAAL,CAAgBhB,MAAhB,KAA2B,CAAnD,EAAsD;AACpD,aAAKc,KAAL;AACD;AACD,WAAKC,KAAL,GAAa,CAAb;AACA,WAAKC,UAAL,GAAkB,EAAlB;AACA;AACF,SAAK,OAAL;AACE;AACA;AACA;AACA;AACA,UAAI,KAAKA,UAAL,CAAgBhB,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,aAAKe,KAAL;AACD;AACD,WAAKC,UAAL,GAAkB,EAAlB;AACA;AACF;AACA;AACA,SAAK,KAAL;AACE,UAAI,KAAKA,UAAL,CAAgBhB,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,aAAKgB,UAAL,GAAkB,CAAC,CAAD,CAAlB;AACD,OAFD,MAEO;AACL,YAAItB,IAAI,KAAKsB,UAAL,CAAgBhB,MAAxB;AACA,eAAO,EAAEN,CAAF,IAAO,CAAd,EAAiB;AACf,cAAI,OAAO,KAAKsB,UAAL,CAAgBtB,CAAhB,CAAP,KAA8B,QAAlC,EAA4C;AAC1C,iBAAKsB,UAAL,CAAgBtB,CAAhB;AACAA,gBAAI,CAAC,CAAL;AACD;AACF;AACD,YAAIA,MAAM,CAAC,CAAX,EAAc;AACZ;AACA,eAAKsB,UAAL,CAAgBoB,IAAhB,CAAqB,CAArB;AACD;AACF;AACD,UAAID,UAAJ,EAAgB;AACd;AACA;AACA,YAAI,KAAKnB,UAAL,CAAgB,CAAhB,MAAuBmB,UAA3B,EAAuC;AACrC,cAAIE,MAAM,KAAKrB,UAAL,CAAgB,CAAhB,CAAN,CAAJ,EAA+B;AAC7B,iBAAKA,UAAL,GAAkB,CAACmB,UAAD,EAAa,CAAb,CAAlB;AACD;AACF,SAJD,MAIO;AACL,eAAKnB,UAAL,GAAkB,CAACmB,UAAD,EAAa,CAAb,CAAlB;AACD;AACF;AACD;;AAEF;AACE,YAAM,IAAIG,KAAJ,CAAU,iCAAiCJ,OAA3C,CAAN;AAlGJ;AAoGA,OAAKZ,MAAL;AACA,OAAKV,GAAL,GAAW,KAAKhB,OAAhB;AACA,SAAO,IAAP;AACD,CAxGD;;AA0GArE,QAAQ0G,GAAR,GAAcA,GAAd;AACA,SAASA,GAAT,CAAcrC,OAAd,EAAuBsC,OAAvB,EAAgCpC,KAAhC,EAAuCqC,UAAvC,EAAmD;AACjD,MAAI,OAAQrC,KAAR,KAAmB,QAAvB,EAAiC;AAC/BqC,iBAAarC,KAAb;AACAA,YAAQkC,SAAR;AACD;;AAED,MAAI;AACF,WAAO,IAAIvG,MAAJ,CAAWmE,OAAX,EAAoBE,KAApB,EAA2BmC,GAA3B,CAA+BC,OAA/B,EAAwCC,UAAxC,EAAoDvC,OAA3D;AACD,GAFD,CAEE,OAAOM,EAAP,EAAW;AACX,WAAO,IAAP;AACD;AACF;;AAED3E,QAAQgH,IAAR,GAAeA,IAAf;AACA,SAASA,IAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AACjC,MAAIC,GAAGF,QAAH,EAAaC,QAAb,CAAJ,EAA4B;AAC1B,WAAO,IAAP;AACD,GAFD,MAEO;AACL,QAAIE,KAAKhD,MAAM6C,QAAN,CAAT;AACA,QAAII,KAAKjD,MAAM8C,QAAN,CAAT;AACA,QAAII,SAAS,EAAb;AACA,QAAIF,GAAG3B,UAAH,CAAchB,MAAd,IAAwB4C,GAAG5B,UAAH,CAAchB,MAA1C,EAAkD;AAChD6C,eAAS,KAAT;AACA,UAAIC,gBAAgB,YAApB;AACD;AACD,SAAK,IAAIC,GAAT,IAAgBJ,EAAhB,EAAoB;AAClB,UAAII,QAAQ,OAAR,IAAmBA,QAAQ,OAA3B,IAAsCA,QAAQ,OAAlD,EAA2D;AACzD,YAAIJ,GAAGI,GAAH,MAAYH,GAAGG,GAAH,CAAhB,EAAyB;AACvB,iBAAOF,SAASE,GAAhB;AACD;AACF;AACF;AACD,WAAOD,aAAP,CAfK,CAegB;AACtB;AACF;;AAEDvH,QAAQsG,kBAAR,GAA6BA,kBAA7B;;AAEA,IAAImB,UAAU,UAAd;AACA,SAASnB,kBAAT,CAA6BC,CAA7B,EAAgCC,CAAhC,EAAmC;AACjC,MAAIkB,OAAOD,QAAQlH,IAAR,CAAagG,CAAb,CAAX;AACA,MAAIoB,OAAOF,QAAQlH,IAAR,CAAaiG,CAAb,CAAX;;AAEA,MAAIkB,QAAQC,IAAZ,EAAkB;AAChBpB,QAAI,CAACA,CAAL;AACAC,QAAI,CAACA,CAAL;AACD;;AAED,SAAOD,MAAMC,CAAN,GAAU,CAAV,GACFkB,QAAQ,CAACC,IAAV,GAAkB,CAAC,CAAnB,GACCA,QAAQ,CAACD,IAAV,GAAkB,CAAlB,GACAnB,IAAIC,CAAJ,GAAQ,CAAC,CAAT,GACA,CAJJ;AAKD;;AAEDxG,QAAQ4H,mBAAR,GAA8BA,mBAA9B;AACA,SAASA,mBAAT,CAA8BrB,CAA9B,EAAiCC,CAAjC,EAAoC;AAClC,SAAOF,mBAAmBE,CAAnB,EAAsBD,CAAtB,CAAP;AACD;;AAEDvG,QAAQsF,KAAR,GAAgBA,KAAhB;AACA,SAASA,KAAT,CAAgBiB,CAAhB,EAAmBhC,KAAnB,EAA0B;AACxB,SAAO,IAAIrE,MAAJ,CAAWqG,CAAX,EAAchC,KAAd,EAAqBe,KAA5B;AACD;;AAEDtF,QAAQuF,KAAR,GAAgBA,KAAhB;AACA,SAASA,KAAT,CAAgBgB,CAAhB,EAAmBhC,KAAnB,EAA0B;AACxB,SAAO,IAAIrE,MAAJ,CAAWqG,CAAX,EAAchC,KAAd,EAAqBgB,KAA5B;AACD;;AAEDvF,QAAQwF,KAAR,GAAgBA,KAAhB;AACA,SAASA,KAAT,CAAgBe,CAAhB,EAAmBhC,KAAnB,EAA0B;AACxB,SAAO,IAAIrE,MAAJ,CAAWqG,CAAX,EAAchC,KAAd,EAAqBiB,KAA5B;AACD;;AAEDxF,QAAQkG,OAAR,GAAkBA,OAAlB;AACA,SAASA,OAAT,CAAkBK,CAAlB,EAAqBC,CAArB,EAAwBjC,KAAxB,EAA+B;AAC7B,SAAO,IAAIrE,MAAJ,CAAWqG,CAAX,EAAchC,KAAd,EAAqB2B,OAArB,CAA6B,IAAIhG,MAAJ,CAAWsG,CAAX,EAAcjC,KAAd,CAA7B,CAAP;AACD;;AAEDvE,QAAQ6H,YAAR,GAAuBA,YAAvB;AACA,SAASA,YAAT,CAAuBtB,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,SAAON,QAAQK,CAAR,EAAWC,CAAX,EAAc,IAAd,CAAP;AACD;;AAEDxG,QAAQ8H,QAAR,GAAmBA,QAAnB;AACA,SAASA,QAAT,CAAmBvB,CAAnB,EAAsBC,CAAtB,EAAyBjC,KAAzB,EAAgC;AAC9B,SAAO2B,QAAQM,CAAR,EAAWD,CAAX,EAAchC,KAAd,CAAP;AACD;;AAEDvE,QAAQ+H,IAAR,GAAeA,IAAf;AACA,SAASA,IAAT,CAAeC,IAAf,EAAqBzD,KAArB,EAA4B;AAC1B,SAAOyD,KAAKD,IAAL,CAAU,UAAUxB,CAAV,EAAaC,CAAb,EAAgB;AAC/B,WAAOxG,QAAQkG,OAAR,CAAgBK,CAAhB,EAAmBC,CAAnB,EAAsBjC,KAAtB,CAAP;AACD,GAFM,CAAP;AAGD;;AAEDvE,QAAQiI,KAAR,GAAgBA,KAAhB;AACA,SAASA,KAAT,CAAgBD,IAAhB,EAAsBzD,KAAtB,EAA6B;AAC3B,SAAOyD,KAAKD,IAAL,CAAU,UAAUxB,CAAV,EAAaC,CAAb,EAAgB;AAC/B,WAAOxG,QAAQ8H,QAAR,CAAiBvB,CAAjB,EAAoBC,CAApB,EAAuBjC,KAAvB,CAAP;AACD,GAFM,CAAP;AAGD;;AAEDvE,QAAQkI,EAAR,GAAaA,EAAb;AACA,SAASA,EAAT,CAAa3B,CAAb,EAAgBC,CAAhB,EAAmBjC,KAAnB,EAA0B;AACxB,SAAO2B,QAAQK,CAAR,EAAWC,CAAX,EAAcjC,KAAd,IAAuB,CAA9B;AACD;;AAEDvE,QAAQmI,EAAR,GAAaA,EAAb;AACA,SAASA,EAAT,CAAa5B,CAAb,EAAgBC,CAAhB,EAAmBjC,KAAnB,EAA0B;AACxB,SAAO2B,QAAQK,CAAR,EAAWC,CAAX,EAAcjC,KAAd,IAAuB,CAA9B;AACD;;AAEDvE,QAAQmH,EAAR,GAAaA,EAAb;AACA,SAASA,EAAT,CAAaZ,CAAb,EAAgBC,CAAhB,EAAmBjC,KAAnB,EAA0B;AACxB,SAAO2B,QAAQK,CAAR,EAAWC,CAAX,EAAcjC,KAAd,MAAyB,CAAhC;AACD;;AAEDvE,QAAQoI,GAAR,GAAcA,GAAd;AACA,SAASA,GAAT,CAAc7B,CAAd,EAAiBC,CAAjB,EAAoBjC,KAApB,EAA2B;AACzB,SAAO2B,QAAQK,CAAR,EAAWC,CAAX,EAAcjC,KAAd,MAAyB,CAAhC;AACD;;AAEDvE,QAAQqI,GAAR,GAAcA,GAAd;AACA,SAASA,GAAT,CAAc9B,CAAd,EAAiBC,CAAjB,EAAoBjC,KAApB,EAA2B;AACzB,SAAO2B,QAAQK,CAAR,EAAWC,CAAX,EAAcjC,KAAd,KAAwB,CAA/B;AACD;;AAEDvE,QAAQsI,GAAR,GAAcA,GAAd;AACA,SAASA,GAAT,CAAc/B,CAAd,EAAiBC,CAAjB,EAAoBjC,KAApB,EAA2B;AACzB,SAAO2B,QAAQK,CAAR,EAAWC,CAAX,EAAcjC,KAAd,KAAwB,CAA/B;AACD;;AAEDvE,QAAQuI,GAAR,GAAcA,GAAd;AACA,SAASA,GAAT,CAAchC,CAAd,EAAiBiC,EAAjB,EAAqBhC,CAArB,EAAwBjC,KAAxB,EAA+B;AAC7B,UAAQiE,EAAR;AACE,SAAK,KAAL;AACE,UAAI,QAAOjC,CAAP,yCAAOA,CAAP,OAAa,QAAjB,EACEA,IAAIA,EAAElC,OAAN;AACF,UAAI,QAAOmC,CAAP,yCAAOA,CAAP,OAAa,QAAjB,EACEA,IAAIA,EAAEnC,OAAN;AACF,aAAOkC,MAAMC,CAAb;;AAEF,SAAK,KAAL;AACE,UAAI,QAAOD,CAAP,yCAAOA,CAAP,OAAa,QAAjB,EACEA,IAAIA,EAAElC,OAAN;AACF,UAAI,QAAOmC,CAAP,yCAAOA,CAAP,OAAa,QAAjB,EACEA,IAAIA,EAAEnC,OAAN;AACF,aAAOkC,MAAMC,CAAb;;AAEF,SAAK,EAAL;AACA,SAAK,GAAL;AACA,SAAK,IAAL;AACE,aAAOW,GAAGZ,CAAH,EAAMC,CAAN,EAASjC,KAAT,CAAP;;AAEF,SAAK,IAAL;AACE,aAAO6D,IAAI7B,CAAJ,EAAOC,CAAP,EAAUjC,KAAV,CAAP;;AAEF,SAAK,GAAL;AACE,aAAO2D,GAAG3B,CAAH,EAAMC,CAAN,EAASjC,KAAT,CAAP;;AAEF,SAAK,IAAL;AACE,aAAO8D,IAAI9B,CAAJ,EAAOC,CAAP,EAAUjC,KAAV,CAAP;;AAEF,SAAK,GAAL;AACE,aAAO4D,GAAG5B,CAAH,EAAMC,CAAN,EAASjC,KAAT,CAAP;;AAEF,SAAK,IAAL;AACE,aAAO+D,IAAI/B,CAAJ,EAAOC,CAAP,EAAUjC,KAAV,CAAP;;AAEF;AACE,YAAM,IAAIW,SAAJ,CAAc,uBAAuBsD,EAArC,CAAN;AApCJ;AAsCD;;AAEDxI,QAAQyI,UAAR,GAAqBA,UAArB;AACA,SAASA,UAAT,CAAqBC,IAArB,EAA2BpE,OAA3B,EAAoC;AAClC,MAAI,CAACA,OAAD,IAAY,QAAOA,OAAP,yCAAOA,OAAP,OAAmB,QAAnC,EAA6C;AAC3CA,cAAU;AACRC,aAAO,CAAC,CAACD,OADD;AAERE,yBAAmB;AAFX,KAAV;AAID;;AAED,MAAIkE,gBAAgBD,UAApB,EAAgC;AAC9B,QAAIC,KAAKnE,KAAL,KAAe,CAAC,CAACD,QAAQC,KAA7B,EAAoC;AAClC,aAAOmE,IAAP;AACD,KAFD,MAEO;AACLA,aAAOA,KAAKC,KAAZ;AACD;AACF;;AAED,MAAI,EAAE,gBAAgBF,UAAlB,CAAJ,EAAmC;AACjC,WAAO,IAAIA,UAAJ,CAAeC,IAAf,EAAqBpE,OAArB,CAAP;AACD;;AAEDnE,QAAM,YAAN,EAAoBuI,IAApB,EAA0BpE,OAA1B;AACA,OAAKA,OAAL,GAAeA,OAAf;AACA,OAAKC,KAAL,GAAa,CAAC,CAACD,QAAQC,KAAvB;AACA,OAAKH,KAAL,CAAWsE,IAAX;;AAEA,MAAI,KAAKE,MAAL,KAAgBC,GAApB,EAAyB;AACvB,SAAKF,KAAL,GAAa,EAAb;AACD,GAFD,MAEO;AACL,SAAKA,KAAL,GAAa,KAAKG,QAAL,GAAgB,KAAKF,MAAL,CAAYvE,OAAzC;AACD;;AAEDlE,QAAM,MAAN,EAAc,IAAd;AACD;;AAED,IAAI0I,MAAM,EAAV;AACAJ,WAAW/H,SAAX,CAAqB0D,KAArB,GAA6B,UAAUsE,IAAV,EAAgB;AAC3C,MAAIhE,IAAI,KAAKJ,OAAL,CAAaC,KAAb,GAAqBhD,GAAGqC,eAAH,CAArB,GAA2CrC,GAAGsC,UAAH,CAAnD;AACA,MAAIsB,IAAIuD,KAAKtD,KAAL,CAAWV,CAAX,CAAR;;AAEA,MAAI,CAACS,CAAL,EAAQ;AACN,UAAM,IAAID,SAAJ,CAAc,yBAAyBwD,IAAvC,CAAN;AACD;;AAED,OAAKI,QAAL,GAAgB3D,EAAE,CAAF,CAAhB;AACA,MAAI,KAAK2D,QAAL,KAAkB,GAAtB,EAA2B;AACzB,SAAKA,QAAL,GAAgB,EAAhB;AACD;;AAED;AACA,MAAI,CAAC3D,EAAE,CAAF,CAAL,EAAW;AACT,SAAKyD,MAAL,GAAcC,GAAd;AACD,GAFD,MAEO;AACL,SAAKD,MAAL,GAAc,IAAI1I,MAAJ,CAAWiF,EAAE,CAAF,CAAX,EAAiB,KAAKb,OAAL,CAAaC,KAA9B,CAAd;AACD;AACF,CAnBD;;AAqBAkE,WAAW/H,SAAX,CAAqBuF,QAArB,GAAgC,YAAY;AAC1C,SAAO,KAAK0C,KAAZ;AACD,CAFD;;AAIAF,WAAW/H,SAAX,CAAqBH,IAArB,GAA4B,UAAU8D,OAAV,EAAmB;AAC7ClE,QAAM,iBAAN,EAAyBkE,OAAzB,EAAkC,KAAKC,OAAL,CAAaC,KAA/C;;AAEA,MAAI,KAAKqE,MAAL,KAAgBC,GAApB,EAAyB;AACvB,WAAO,IAAP;AACD;;AAED,MAAI,OAAOxE,OAAP,KAAmB,QAAvB,EAAiC;AAC/BA,cAAU,IAAInE,MAAJ,CAAWmE,OAAX,EAAoB,KAAKC,OAAzB,CAAV;AACD;;AAED,SAAOiE,IAAIlE,OAAJ,EAAa,KAAKyE,QAAlB,EAA4B,KAAKF,MAAjC,EAAyC,KAAKtE,OAA9C,CAAP;AACD,CAZD;;AAcAmE,WAAW/H,SAAX,CAAqBqI,UAArB,GAAkC,UAAUL,IAAV,EAAgBpE,OAAhB,EAAyB;AACzD,MAAI,EAAEoE,gBAAgBD,UAAlB,CAAJ,EAAmC;AACjC,UAAM,IAAIvD,SAAJ,CAAc,0BAAd,CAAN;AACD;;AAED,MAAI,CAACZ,OAAD,IAAY,QAAOA,OAAP,yCAAOA,OAAP,OAAmB,QAAnC,EAA6C;AAC3CA,cAAU;AACRC,aAAO,CAAC,CAACD,OADD;AAERE,yBAAmB;AAFX,KAAV;AAID;;AAED,MAAIwE,QAAJ;;AAEA,MAAI,KAAKF,QAAL,KAAkB,EAAtB,EAA0B;AACxBE,eAAW,IAAIC,KAAJ,CAAUP,KAAKC,KAAf,EAAsBrE,OAAtB,CAAX;AACA,WAAO4E,UAAU,KAAKP,KAAf,EAAsBK,QAAtB,EAAgC1E,OAAhC,CAAP;AACD,GAHD,MAGO,IAAIoE,KAAKI,QAAL,KAAkB,EAAtB,EAA0B;AAC/BE,eAAW,IAAIC,KAAJ,CAAU,KAAKN,KAAf,EAAsBrE,OAAtB,CAAX;AACA,WAAO4E,UAAUR,KAAKE,MAAf,EAAuBI,QAAvB,EAAiC1E,OAAjC,CAAP;AACD;;AAED,MAAI6E,0BACF,CAAC,KAAKL,QAAL,KAAkB,IAAlB,IAA0B,KAAKA,QAAL,KAAkB,GAA7C,MACCJ,KAAKI,QAAL,KAAkB,IAAlB,IAA0BJ,KAAKI,QAAL,KAAkB,GAD7C,CADF;AAGA,MAAIM,0BACF,CAAC,KAAKN,QAAL,KAAkB,IAAlB,IAA0B,KAAKA,QAAL,KAAkB,GAA7C,MACCJ,KAAKI,QAAL,KAAkB,IAAlB,IAA0BJ,KAAKI,QAAL,KAAkB,GAD7C,CADF;AAGA,MAAIO,aAAa,KAAKT,MAAL,CAAYvE,OAAZ,KAAwBqE,KAAKE,MAAL,CAAYvE,OAArD;AACA,MAAIiF,+BACF,CAAC,KAAKR,QAAL,KAAkB,IAAlB,IAA0B,KAAKA,QAAL,KAAkB,IAA7C,MACCJ,KAAKI,QAAL,KAAkB,IAAlB,IAA0BJ,KAAKI,QAAL,KAAkB,IAD7C,CADF;AAGA,MAAIS,6BACFhB,IAAI,KAAKK,MAAT,EAAiB,GAAjB,EAAsBF,KAAKE,MAA3B,EAAmCtE,OAAnC,KACC,CAAC,KAAKwE,QAAL,KAAkB,IAAlB,IAA0B,KAAKA,QAAL,KAAkB,GAA7C,MACAJ,KAAKI,QAAL,KAAkB,IAAlB,IAA0BJ,KAAKI,QAAL,KAAkB,GAD5C,CAFH;AAIA,MAAIU,gCACFjB,IAAI,KAAKK,MAAT,EAAiB,GAAjB,EAAsBF,KAAKE,MAA3B,EAAmCtE,OAAnC,KACC,CAAC,KAAKwE,QAAL,KAAkB,IAAlB,IAA0B,KAAKA,QAAL,KAAkB,GAA7C,MACAJ,KAAKI,QAAL,KAAkB,IAAlB,IAA0BJ,KAAKI,QAAL,KAAkB,GAD5C,CAFH;;AAKA,SAAOK,2BAA2BC,uBAA3B,IACJC,cAAcC,4BADV,IAELC,0BAFK,IAEyBC,6BAFhC;AAGD,CA5CD;;AA8CAxJ,QAAQiJ,KAAR,GAAgBA,KAAhB;AACA,SAASA,KAAT,CAAgBQ,KAAhB,EAAuBnF,OAAvB,EAAgC;AAC9B,MAAI,CAACA,OAAD,IAAY,QAAOA,OAAP,yCAAOA,OAAP,OAAmB,QAAnC,EAA6C;AAC3CA,cAAU;AACRC,aAAO,CAAC,CAACD,OADD;AAERE,yBAAmB;AAFX,KAAV;AAID;;AAED,MAAIiF,iBAAiBR,KAArB,EAA4B;AAC1B,QAAIQ,MAAMlF,KAAN,KAAgB,CAAC,CAACD,QAAQC,KAA1B,IACAkF,MAAMjF,iBAAN,KAA4B,CAAC,CAACF,QAAQE,iBAD1C,EAC6D;AAC3D,aAAOiF,KAAP;AACD,KAHD,MAGO;AACL,aAAO,IAAIR,KAAJ,CAAUQ,MAAMpE,GAAhB,EAAqBf,OAArB,CAAP;AACD;AACF;;AAED,MAAImF,iBAAiBhB,UAArB,EAAiC;AAC/B,WAAO,IAAIQ,KAAJ,CAAUQ,MAAMd,KAAhB,EAAuBrE,OAAvB,CAAP;AACD;;AAED,MAAI,EAAE,gBAAgB2E,KAAlB,CAAJ,EAA8B;AAC5B,WAAO,IAAIA,KAAJ,CAAUQ,KAAV,EAAiBnF,OAAjB,CAAP;AACD;;AAED,OAAKA,OAAL,GAAeA,OAAf;AACA,OAAKC,KAAL,GAAa,CAAC,CAACD,QAAQC,KAAvB;AACA,OAAKC,iBAAL,GAAyB,CAAC,CAACF,QAAQE,iBAAnC;;AAEA;AACA,OAAKa,GAAL,GAAWoE,KAAX;AACA,OAAKC,GAAL,GAAWD,MAAM/D,KAAN,CAAY,YAAZ,EAA0BC,GAA1B,CAA8B,UAAU8D,KAAV,EAAiB;AACxD,WAAO,KAAKE,UAAL,CAAgBF,MAAMzE,IAAN,EAAhB,CAAP;AACD,GAFU,EAER,IAFQ,EAEF4E,MAFE,CAEK,UAAUC,CAAV,EAAa;AAC3B;AACA,WAAOA,EAAEpF,MAAT;AACD,GALU,CAAX;;AAOA,MAAI,CAAC,KAAKiF,GAAL,CAASjF,MAAd,EAAsB;AACpB,UAAM,IAAIS,SAAJ,CAAc,2BAA2BuE,KAAzC,CAAN;AACD;;AAED,OAAK1D,MAAL;AACD;;AAEDkD,MAAMvI,SAAN,CAAgBqF,MAAhB,GAAyB,YAAY;AACnC,OAAK0D,KAAL,GAAa,KAAKC,GAAL,CAAS/D,GAAT,CAAa,UAAUmE,KAAV,EAAiB;AACzC,WAAOA,MAAM9D,IAAN,CAAW,GAAX,EAAgBhB,IAAhB,EAAP;AACD,GAFY,EAEVgB,IAFU,CAEL,IAFK,EAEChB,IAFD,EAAb;AAGA,SAAO,KAAKyE,KAAZ;AACD,CALD;;AAOAR,MAAMvI,SAAN,CAAgBuF,QAAhB,GAA2B,YAAY;AACrC,SAAO,KAAKwD,KAAZ;AACD,CAFD;;AAIAR,MAAMvI,SAAN,CAAgBiJ,UAAhB,GAA6B,UAAUF,KAAV,EAAiB;AAC5C,MAAIlF,QAAQ,KAAKD,OAAL,CAAaC,KAAzB;AACAkF,UAAQA,MAAMzE,IAAN,EAAR;AACA;AACA,MAAI+E,KAAKxF,QAAQhD,GAAG0C,gBAAH,CAAR,GAA+B1C,GAAGyC,WAAH,CAAxC;AACAyF,UAAQA,MAAMxE,OAAN,CAAc8E,EAAd,EAAkBC,aAAlB,CAAR;AACA7J,QAAM,gBAAN,EAAwBsJ,KAAxB;AACA;AACAA,UAAQA,MAAMxE,OAAN,CAAc1D,GAAGuC,cAAH,CAAd,EAAkCC,qBAAlC,CAAR;AACA5D,QAAM,iBAAN,EAAyBsJ,KAAzB,EAAgClI,GAAGuC,cAAH,CAAhC;;AAEA;AACA2F,UAAQA,MAAMxE,OAAN,CAAc1D,GAAG2B,SAAH,CAAd,EAA6BE,gBAA7B,CAAR;;AAEA;AACAqG,UAAQA,MAAMxE,OAAN,CAAc1D,GAAGiC,SAAH,CAAd,EAA6BC,gBAA7B,CAAR;;AAEA;AACAgG,UAAQA,MAAM/D,KAAN,CAAY,KAAZ,EAAmBM,IAAnB,CAAwB,GAAxB,CAAR;;AAEA;AACA;;AAEA,MAAIiE,SAAS1F,QAAQhD,GAAGqC,eAAH,CAAR,GAA8BrC,GAAGsC,UAAH,CAA3C;AACA,MAAI6F,MAAMD,MAAM/D,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,CAAqB,UAAU+C,IAAV,EAAgB;AAC7C,WAAOwB,gBAAgBxB,IAAhB,EAAsB,KAAKpE,OAA3B,CAAP;AACD,GAFS,EAEP,IAFO,EAED0B,IAFC,CAEI,GAFJ,EAESN,KAFT,CAEe,KAFf,CAAV;AAGA,MAAI,KAAKpB,OAAL,CAAaC,KAAjB,EAAwB;AACtB;AACAmF,UAAMA,IAAIE,MAAJ,CAAW,UAAUlB,IAAV,EAAgB;AAC/B,aAAO,CAAC,CAACA,KAAKtD,KAAL,CAAW6E,MAAX,CAAT;AACD,KAFK,CAAN;AAGD;AACDP,QAAMA,IAAI/D,GAAJ,CAAQ,UAAU+C,IAAV,EAAgB;AAC5B,WAAO,IAAID,UAAJ,CAAeC,IAAf,EAAqB,KAAKpE,OAA1B,CAAP;AACD,GAFK,EAEH,IAFG,CAAN;;AAIA,SAAOoF,GAAP;AACD,CAtCD;;AAwCAT,MAAMvI,SAAN,CAAgBqI,UAAhB,GAA6B,UAAUU,KAAV,EAAiBnF,OAAjB,EAA0B;AACrD,MAAI,EAAEmF,iBAAiBR,KAAnB,CAAJ,EAA+B;AAC7B,UAAM,IAAI/D,SAAJ,CAAc,qBAAd,CAAN;AACD;;AAED,SAAO,KAAKwE,GAAL,CAASS,IAAT,CAAc,UAAUC,eAAV,EAA2B;AAC9C,WAAOA,gBAAgBC,KAAhB,CAAsB,UAAUC,cAAV,EAA0B;AACrD,aAAOb,MAAMC,GAAN,CAAUS,IAAV,CAAe,UAAUI,gBAAV,EAA4B;AAChD,eAAOA,iBAAiBF,KAAjB,CAAuB,UAAUG,eAAV,EAA2B;AACvD,iBAAOF,eAAevB,UAAf,CAA0ByB,eAA1B,EAA2ClG,OAA3C,CAAP;AACD,SAFM,CAAP;AAGD,OAJM,CAAP;AAKD,KANM,CAAP;AAOD,GARM,CAAP;AASD,CAdD;;AAgBA;AACAtE,QAAQyK,aAAR,GAAwBA,aAAxB;AACA,SAASA,aAAT,CAAwBhB,KAAxB,EAA+BnF,OAA/B,EAAwC;AACtC,SAAO,IAAI2E,KAAJ,CAAUQ,KAAV,EAAiBnF,OAAjB,EAA0BoF,GAA1B,CAA8B/D,GAA9B,CAAkC,UAAU+C,IAAV,EAAgB;AACvD,WAAOA,KAAK/C,GAAL,CAAS,UAAUkE,CAAV,EAAa;AAC3B,aAAOA,EAAElB,KAAT;AACD,KAFM,EAEJ3C,IAFI,CAEC,GAFD,EAEMhB,IAFN,GAEaU,KAFb,CAEmB,GAFnB,CAAP;AAGD,GAJM,CAAP;AAKD;;AAED;AACA;AACA;AACA,SAASwE,eAAT,CAA0BxB,IAA1B,EAAgCpE,OAAhC,EAAyC;AACvCnE,QAAM,MAAN,EAAcuI,IAAd,EAAoBpE,OAApB;AACAoE,SAAOgC,cAAchC,IAAd,EAAoBpE,OAApB,CAAP;AACAnE,QAAM,OAAN,EAAeuI,IAAf;AACAA,SAAOiC,cAAcjC,IAAd,EAAoBpE,OAApB,CAAP;AACAnE,QAAM,QAAN,EAAgBuI,IAAhB;AACAA,SAAOkC,eAAelC,IAAf,EAAqBpE,OAArB,CAAP;AACAnE,QAAM,QAAN,EAAgBuI,IAAhB;AACAA,SAAOmC,aAAanC,IAAb,EAAmBpE,OAAnB,CAAP;AACAnE,QAAM,OAAN,EAAeuI,IAAf;AACA,SAAOA,IAAP;AACD;;AAED,SAASoC,GAAT,CAAclF,EAAd,EAAkB;AAChB,SAAO,CAACA,EAAD,IAAOA,GAAGmF,WAAH,OAAqB,GAA5B,IAAmCnF,OAAO,GAAjD;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,SAAS+E,aAAT,CAAwBjC,IAAxB,EAA8BpE,OAA9B,EAAuC;AACrC,SAAOoE,KAAK1D,IAAL,GAAYU,KAAZ,CAAkB,KAAlB,EAAyBC,GAAzB,CAA6B,UAAU+C,IAAV,EAAgB;AAClD,WAAOsC,aAAatC,IAAb,EAAmBpE,OAAnB,CAAP;AACD,GAFM,EAEJ0B,IAFI,CAEC,GAFD,CAAP;AAGD;;AAED,SAASgF,YAAT,CAAuBtC,IAAvB,EAA6BpE,OAA7B,EAAsC;AACpC,MAAII,IAAIJ,QAAQC,KAAR,GAAgBhD,GAAG+B,UAAH,CAAhB,GAAiC/B,GAAG8B,KAAH,CAAzC;AACA,SAAOqF,KAAKzD,OAAL,CAAaP,CAAb,EAAgB,UAAUuG,CAAV,EAAaC,CAAb,EAAgB/F,CAAhB,EAAmBgG,CAAnB,EAAsBC,EAAtB,EAA0B;AAC/CjL,UAAM,OAAN,EAAeuI,IAAf,EAAqBuC,CAArB,EAAwBC,CAAxB,EAA2B/F,CAA3B,EAA8BgG,CAA9B,EAAiCC,EAAjC;AACA,QAAIC,GAAJ;;AAEA,QAAIP,IAAII,CAAJ,CAAJ,EAAY;AACVG,YAAM,EAAN;AACD,KAFD,MAEO,IAAIP,IAAI3F,CAAJ,CAAJ,EAAY;AACjBkG,YAAM,OAAOH,CAAP,GAAW,QAAX,IAAuB,CAACA,CAAD,GAAK,CAA5B,IAAiC,MAAvC;AACD,KAFM,MAEA,IAAIJ,IAAIK,CAAJ,CAAJ,EAAY;AACjB;AACAE,YAAM,OAAOH,CAAP,GAAW,GAAX,GAAiB/F,CAAjB,GAAqB,MAArB,GAA8B+F,CAA9B,GAAkC,GAAlC,IAAyC,CAAC/F,CAAD,GAAK,CAA9C,IAAmD,IAAzD;AACD,KAHM,MAGA,IAAIiG,EAAJ,EAAQ;AACbjL,YAAM,iBAAN,EAAyBiL,EAAzB;AACAC,YAAM,OAAOH,CAAP,GAAW,GAAX,GAAiB/F,CAAjB,GAAqB,GAArB,GAA2BgG,CAA3B,GAA+B,GAA/B,GAAqCC,EAArC,GACA,IADA,GACOF,CADP,GACW,GADX,IACkB,CAAC/F,CAAD,GAAK,CADvB,IAC4B,IADlC;AAED,KAJM,MAIA;AACL;AACAkG,YAAM,OAAOH,CAAP,GAAW,GAAX,GAAiB/F,CAAjB,GAAqB,GAArB,GAA2BgG,CAA3B,GACA,IADA,GACOD,CADP,GACW,GADX,IACkB,CAAC/F,CAAD,GAAK,CADvB,IAC4B,IADlC;AAED;;AAEDhF,UAAM,cAAN,EAAsBkL,GAAtB;AACA,WAAOA,GAAP;AACD,GAvBM,CAAP;AAwBD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,SAASX,aAAT,CAAwBhC,IAAxB,EAA8BpE,OAA9B,EAAuC;AACrC,SAAOoE,KAAK1D,IAAL,GAAYU,KAAZ,CAAkB,KAAlB,EAAyBC,GAAzB,CAA6B,UAAU+C,IAAV,EAAgB;AAClD,WAAO4C,aAAa5C,IAAb,EAAmBpE,OAAnB,CAAP;AACD,GAFM,EAEJ0B,IAFI,CAEC,GAFD,CAAP;AAGD;;AAED,SAASsF,YAAT,CAAuB5C,IAAvB,EAA6BpE,OAA7B,EAAsC;AACpCnE,QAAM,OAAN,EAAeuI,IAAf,EAAqBpE,OAArB;AACA,MAAII,IAAIJ,QAAQC,KAAR,GAAgBhD,GAAGoC,UAAH,CAAhB,GAAiCpC,GAAGmC,KAAH,CAAzC;AACA,SAAOgF,KAAKzD,OAAL,CAAaP,CAAb,EAAgB,UAAUuG,CAAV,EAAaC,CAAb,EAAgB/F,CAAhB,EAAmBgG,CAAnB,EAAsBC,EAAtB,EAA0B;AAC/CjL,UAAM,OAAN,EAAeuI,IAAf,EAAqBuC,CAArB,EAAwBC,CAAxB,EAA2B/F,CAA3B,EAA8BgG,CAA9B,EAAiCC,EAAjC;AACA,QAAIC,GAAJ;;AAEA,QAAIP,IAAII,CAAJ,CAAJ,EAAY;AACVG,YAAM,EAAN;AACD,KAFD,MAEO,IAAIP,IAAI3F,CAAJ,CAAJ,EAAY;AACjBkG,YAAM,OAAOH,CAAP,GAAW,QAAX,IAAuB,CAACA,CAAD,GAAK,CAA5B,IAAiC,MAAvC;AACD,KAFM,MAEA,IAAIJ,IAAIK,CAAJ,CAAJ,EAAY;AACjB,UAAID,MAAM,GAAV,EAAe;AACbG,cAAM,OAAOH,CAAP,GAAW,GAAX,GAAiB/F,CAAjB,GAAqB,MAArB,GAA8B+F,CAA9B,GAAkC,GAAlC,IAAyC,CAAC/F,CAAD,GAAK,CAA9C,IAAmD,IAAzD;AACD,OAFD,MAEO;AACLkG,cAAM,OAAOH,CAAP,GAAW,GAAX,GAAiB/F,CAAjB,GAAqB,MAArB,IAA+B,CAAC+F,CAAD,GAAK,CAApC,IAAyC,MAA/C;AACD;AACF,KANM,MAMA,IAAIE,EAAJ,EAAQ;AACbjL,YAAM,iBAAN,EAAyBiL,EAAzB;AACA,UAAIF,MAAM,GAAV,EAAe;AACb,YAAI/F,MAAM,GAAV,EAAe;AACbkG,gBAAM,OAAOH,CAAP,GAAW,GAAX,GAAiB/F,CAAjB,GAAqB,GAArB,GAA2BgG,CAA3B,GAA+B,GAA/B,GAAqCC,EAArC,GACA,IADA,GACOF,CADP,GACW,GADX,GACiB/F,CADjB,GACqB,GADrB,IAC4B,CAACgG,CAAD,GAAK,CADjC,CAAN;AAED,SAHD,MAGO;AACLE,gBAAM,OAAOH,CAAP,GAAW,GAAX,GAAiB/F,CAAjB,GAAqB,GAArB,GAA2BgG,CAA3B,GAA+B,GAA/B,GAAqCC,EAArC,GACA,IADA,GACOF,CADP,GACW,GADX,IACkB,CAAC/F,CAAD,GAAK,CADvB,IAC4B,IADlC;AAED;AACF,OARD,MAQO;AACLkG,cAAM,OAAOH,CAAP,GAAW,GAAX,GAAiB/F,CAAjB,GAAqB,GAArB,GAA2BgG,CAA3B,GAA+B,GAA/B,GAAqCC,EAArC,GACA,IADA,IACQ,CAACF,CAAD,GAAK,CADb,IACkB,MADxB;AAED;AACF,KAdM,MAcA;AACL/K,YAAM,OAAN;AACA,UAAI+K,MAAM,GAAV,EAAe;AACb,YAAI/F,MAAM,GAAV,EAAe;AACbkG,gBAAM,OAAOH,CAAP,GAAW,GAAX,GAAiB/F,CAAjB,GAAqB,GAArB,GAA2BgG,CAA3B,GACA,IADA,GACOD,CADP,GACW,GADX,GACiB/F,CADjB,GACqB,GADrB,IAC4B,CAACgG,CAAD,GAAK,CADjC,CAAN;AAED,SAHD,MAGO;AACLE,gBAAM,OAAOH,CAAP,GAAW,GAAX,GAAiB/F,CAAjB,GAAqB,GAArB,GAA2BgG,CAA3B,GACA,IADA,GACOD,CADP,GACW,GADX,IACkB,CAAC/F,CAAD,GAAK,CADvB,IAC4B,IADlC;AAED;AACF,OARD,MAQO;AACLkG,cAAM,OAAOH,CAAP,GAAW,GAAX,GAAiB/F,CAAjB,GAAqB,GAArB,GAA2BgG,CAA3B,GACA,IADA,IACQ,CAACD,CAAD,GAAK,CADb,IACkB,MADxB;AAED;AACF;;AAED/K,UAAM,cAAN,EAAsBkL,GAAtB;AACA,WAAOA,GAAP;AACD,GA9CM,CAAP;AA+CD;;AAED,SAAST,cAAT,CAAyBlC,IAAzB,EAA+BpE,OAA/B,EAAwC;AACtCnE,QAAM,gBAAN,EAAwBuI,IAAxB,EAA8BpE,OAA9B;AACA,SAAOoE,KAAKhD,KAAL,CAAW,KAAX,EAAkBC,GAAlB,CAAsB,UAAU+C,IAAV,EAAgB;AAC3C,WAAO6C,cAAc7C,IAAd,EAAoBpE,OAApB,CAAP;AACD,GAFM,EAEJ0B,IAFI,CAEC,GAFD,CAAP;AAGD;;AAED,SAASuF,aAAT,CAAwB7C,IAAxB,EAA8BpE,OAA9B,EAAuC;AACrCoE,SAAOA,KAAK1D,IAAL,EAAP;AACA,MAAIN,IAAIJ,QAAQC,KAAR,GAAgBhD,GAAGwB,WAAH,CAAhB,GAAkCxB,GAAGuB,MAAH,CAA1C;AACA,SAAO4F,KAAKzD,OAAL,CAAaP,CAAb,EAAgB,UAAU2G,GAAV,EAAeG,IAAf,EAAqBN,CAArB,EAAwB/F,CAAxB,EAA2BgG,CAA3B,EAA8BC,EAA9B,EAAkC;AACvDjL,UAAM,QAAN,EAAgBuI,IAAhB,EAAsB2C,GAAtB,EAA2BG,IAA3B,EAAiCN,CAAjC,EAAoC/F,CAApC,EAAuCgG,CAAvC,EAA0CC,EAA1C;AACA,QAAIK,KAAKX,IAAII,CAAJ,CAAT;AACA,QAAIQ,KAAKD,MAAMX,IAAI3F,CAAJ,CAAf;AACA,QAAIwG,KAAKD,MAAMZ,IAAIK,CAAJ,CAAf;AACA,QAAIS,OAAOD,EAAX;;AAEA,QAAIH,SAAS,GAAT,IAAgBI,IAApB,EAA0B;AACxBJ,aAAO,EAAP;AACD;;AAED,QAAIC,EAAJ,EAAQ;AACN,UAAID,SAAS,GAAT,IAAgBA,SAAS,GAA7B,EAAkC;AAChC;AACAH,cAAM,QAAN;AACD,OAHD,MAGO;AACL;AACAA,cAAM,GAAN;AACD;AACF,KARD,MAQO,IAAIG,QAAQI,IAAZ,EAAkB;AACvB;AACA;AACA,UAAIF,EAAJ,EAAQ;AACNvG,YAAI,CAAJ;AACD;AACDgG,UAAI,CAAJ;;AAEA,UAAIK,SAAS,GAAb,EAAkB;AAChB;AACA;AACA;AACAA,eAAO,IAAP;AACA,YAAIE,EAAJ,EAAQ;AACNR,cAAI,CAACA,CAAD,GAAK,CAAT;AACA/F,cAAI,CAAJ;AACAgG,cAAI,CAAJ;AACD,SAJD,MAIO;AACLhG,cAAI,CAACA,CAAD,GAAK,CAAT;AACAgG,cAAI,CAAJ;AACD;AACF,OAbD,MAaO,IAAIK,SAAS,IAAb,EAAmB;AACxB;AACA;AACAA,eAAO,GAAP;AACA,YAAIE,EAAJ,EAAQ;AACNR,cAAI,CAACA,CAAD,GAAK,CAAT;AACD,SAFD,MAEO;AACL/F,cAAI,CAACA,CAAD,GAAK,CAAT;AACD;AACF;;AAEDkG,YAAMG,OAAON,CAAP,GAAW,GAAX,GAAiB/F,CAAjB,GAAqB,GAArB,GAA2BgG,CAAjC;AACD,KAjCM,MAiCA,IAAIO,EAAJ,EAAQ;AACbL,YAAM,OAAOH,CAAP,GAAW,QAAX,IAAuB,CAACA,CAAD,GAAK,CAA5B,IAAiC,MAAvC;AACD,KAFM,MAEA,IAAIS,EAAJ,EAAQ;AACbN,YAAM,OAAOH,CAAP,GAAW,GAAX,GAAiB/F,CAAjB,GAAqB,MAArB,GAA8B+F,CAA9B,GAAkC,GAAlC,IAAyC,CAAC/F,CAAD,GAAK,CAA9C,IAAmD,IAAzD;AACD;;AAEDhF,UAAM,eAAN,EAAuBkL,GAAvB;;AAEA,WAAOA,GAAP;AACD,GA7DM,CAAP;AA8DD;;AAED;AACA;AACA,SAASR,YAAT,CAAuBnC,IAAvB,EAA6BpE,OAA7B,EAAsC;AACpCnE,QAAM,cAAN,EAAsBuI,IAAtB,EAA4BpE,OAA5B;AACA;AACA,SAAOoE,KAAK1D,IAAL,GAAYC,OAAZ,CAAoB1D,GAAG2C,IAAH,CAApB,EAA8B,EAA9B,CAAP;AACD;;AAED;AACA;AACA;AACA;AACA;AACA,SAAS8F,aAAT,CAAwB6B,EAAxB,EACEC,IADF,EACQC,EADR,EACYC,EADZ,EACgBC,EADhB,EACoBC,GADpB,EACyBC,EADzB,EAEEC,EAFF,EAEMC,EAFN,EAEUC,EAFV,EAEcC,EAFd,EAEkBC,GAFlB,EAEuBC,EAFvB,EAE2B;AACzB,MAAI3B,IAAIiB,EAAJ,CAAJ,EAAa;AACXD,WAAO,EAAP;AACD,GAFD,MAEO,IAAIhB,IAAIkB,EAAJ,CAAJ,EAAa;AAClBF,WAAO,OAAOC,EAAP,GAAY,MAAnB;AACD,GAFM,MAEA,IAAIjB,IAAImB,EAAJ,CAAJ,EAAa;AAClBH,WAAO,OAAOC,EAAP,GAAY,GAAZ,GAAkBC,EAAlB,GAAuB,IAA9B;AACD,GAFM,MAEA;AACLF,WAAO,OAAOA,IAAd;AACD;;AAED,MAAIhB,IAAIuB,EAAJ,CAAJ,EAAa;AACXD,SAAK,EAAL;AACD,GAFD,MAEO,IAAItB,IAAIwB,EAAJ,CAAJ,EAAa;AAClBF,SAAK,OAAO,CAACC,EAAD,GAAM,CAAb,IAAkB,MAAvB;AACD,GAFM,MAEA,IAAIvB,IAAIyB,EAAJ,CAAJ,EAAa;AAClBH,SAAK,MAAMC,EAAN,GAAW,GAAX,IAAkB,CAACC,EAAD,GAAM,CAAxB,IAA6B,IAAlC;AACD,GAFM,MAEA,IAAIE,GAAJ,EAAS;AACdJ,SAAK,OAAOC,EAAP,GAAY,GAAZ,GAAkBC,EAAlB,GAAuB,GAAvB,GAA6BC,EAA7B,GAAkC,GAAlC,GAAwCC,GAA7C;AACD,GAFM,MAEA;AACLJ,SAAK,OAAOA,EAAZ;AACD;;AAED,SAAO,CAACN,OAAO,GAAP,GAAaM,EAAd,EAAkBpH,IAAlB,EAAP;AACD;;AAED;AACAiE,MAAMvI,SAAN,CAAgBH,IAAhB,GAAuB,UAAU8D,OAAV,EAAmB;AACxC,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,KAAP;AACD;;AAED,MAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC/BA,cAAU,IAAInE,MAAJ,CAAWmE,OAAX,EAAoB,KAAKC,OAAzB,CAAV;AACD;;AAED,OAAK,IAAIH,IAAI,CAAb,EAAgBA,IAAI,KAAKuF,GAAL,CAASjF,MAA7B,EAAqCN,GAArC,EAA0C;AACxC,QAAIuI,QAAQ,KAAKhD,GAAL,CAASvF,CAAT,CAAR,EAAqBE,OAArB,EAA8B,KAAKC,OAAnC,CAAJ,EAAiD;AAC/C,aAAO,IAAP;AACD;AACF;AACD,SAAO,KAAP;AACD,CAfD;;AAiBA,SAASoI,OAAT,CAAkBhD,GAAlB,EAAuBrF,OAAvB,EAAgCC,OAAhC,EAAyC;AACvC,OAAK,IAAIH,IAAI,CAAb,EAAgBA,IAAIuF,IAAIjF,MAAxB,EAAgCN,GAAhC,EAAqC;AACnC,QAAI,CAACuF,IAAIvF,CAAJ,EAAO5D,IAAP,CAAY8D,OAAZ,CAAL,EAA2B;AACzB,aAAO,KAAP;AACD;AACF;;AAED,MAAIA,QAAQoB,UAAR,CAAmBhB,MAAnB,IAA6B,CAACH,QAAQE,iBAA1C,EAA6D;AAC3D;AACA;AACA;AACA;AACA;AACA,SAAKL,IAAI,CAAT,EAAYA,IAAIuF,IAAIjF,MAApB,EAA4BN,GAA5B,EAAiC;AAC/BhE,YAAMuJ,IAAIvF,CAAJ,EAAOyE,MAAb;AACA,UAAIc,IAAIvF,CAAJ,EAAOyE,MAAP,KAAkBC,GAAtB,EAA2B;AACzB;AACD;;AAED,UAAIa,IAAIvF,CAAJ,EAAOyE,MAAP,CAAcnD,UAAd,CAAyBhB,MAAzB,GAAkC,CAAtC,EAAyC;AACvC,YAAIkI,UAAUjD,IAAIvF,CAAJ,EAAOyE,MAArB;AACA,YAAI+D,QAAQrH,KAAR,KAAkBjB,QAAQiB,KAA1B,IACAqH,QAAQpH,KAAR,KAAkBlB,QAAQkB,KAD1B,IAEAoH,QAAQnH,KAAR,KAAkBnB,QAAQmB,KAF9B,EAEqC;AACnC,iBAAO,IAAP;AACD;AACF;AACF;;AAED;AACA,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD;;AAEDxF,QAAQkJ,SAAR,GAAoBA,SAApB;AACA,SAASA,SAAT,CAAoB7E,OAApB,EAA6BoF,KAA7B,EAAoCnF,OAApC,EAA6C;AAC3C,MAAI;AACFmF,YAAQ,IAAIR,KAAJ,CAAUQ,KAAV,EAAiBnF,OAAjB,CAAR;AACD,GAFD,CAEE,OAAOK,EAAP,EAAW;AACX,WAAO,KAAP;AACD;AACD,SAAO8E,MAAMlJ,IAAN,CAAW8D,OAAX,CAAP;AACD;;AAEDrE,QAAQ4M,aAAR,GAAwBA,aAAxB;AACA,SAASA,aAAT,CAAwBC,QAAxB,EAAkCpD,KAAlC,EAAyCnF,OAAzC,EAAkD;AAChD,MAAIwI,MAAM,IAAV;AACA,MAAIC,QAAQ,IAAZ;AACA,MAAI;AACF,QAAIC,WAAW,IAAI/D,KAAJ,CAAUQ,KAAV,EAAiBnF,OAAjB,CAAf;AACD,GAFD,CAEE,OAAOK,EAAP,EAAW;AACX,WAAO,IAAP;AACD;AACDkI,WAASI,OAAT,CAAiB,UAAUpI,CAAV,EAAa;AAC5B,QAAImI,SAASzM,IAAT,CAAcsE,CAAd,CAAJ,EAAsB;AACpB;AACA,UAAI,CAACiI,GAAD,IAAQC,MAAM7G,OAAN,CAAcrB,CAAd,MAAqB,CAAC,CAAlC,EAAqC;AACnC;AACAiI,cAAMjI,CAAN;AACAkI,gBAAQ,IAAI7M,MAAJ,CAAW4M,GAAX,EAAgBxI,OAAhB,CAAR;AACD;AACF;AACF,GATD;AAUA,SAAOwI,GAAP;AACD;;AAED9M,QAAQkN,aAAR,GAAwBA,aAAxB;AACA,SAASA,aAAT,CAAwBL,QAAxB,EAAkCpD,KAAlC,EAAyCnF,OAAzC,EAAkD;AAChD,MAAI6I,MAAM,IAAV;AACA,MAAIC,QAAQ,IAAZ;AACA,MAAI;AACF,QAAIJ,WAAW,IAAI/D,KAAJ,CAAUQ,KAAV,EAAiBnF,OAAjB,CAAf;AACD,GAFD,CAEE,OAAOK,EAAP,EAAW;AACX,WAAO,IAAP;AACD;AACDkI,WAASI,OAAT,CAAiB,UAAUpI,CAAV,EAAa;AAC5B,QAAImI,SAASzM,IAAT,CAAcsE,CAAd,CAAJ,EAAsB;AACpB;AACA,UAAI,CAACsI,GAAD,IAAQC,MAAMlH,OAAN,CAAcrB,CAAd,MAAqB,CAAjC,EAAoC;AAClC;AACAsI,cAAMtI,CAAN;AACAuI,gBAAQ,IAAIlN,MAAJ,CAAWiN,GAAX,EAAgB7I,OAAhB,CAAR;AACD;AACF;AACF,GATD;AAUA,SAAO6I,GAAP;AACD;;AAEDnN,QAAQqN,UAAR,GAAqBA,UAArB;AACA,SAASA,UAAT,CAAqB5D,KAArB,EAA4BlF,KAA5B,EAAmC;AACjCkF,UAAQ,IAAIR,KAAJ,CAAUQ,KAAV,EAAiBlF,KAAjB,CAAR;;AAEA,MAAI+I,SAAS,IAAIpN,MAAJ,CAAW,OAAX,CAAb;AACA,MAAIuJ,MAAMlJ,IAAN,CAAW+M,MAAX,CAAJ,EAAwB;AACtB,WAAOA,MAAP;AACD;;AAEDA,WAAS,IAAIpN,MAAJ,CAAW,SAAX,CAAT;AACA,MAAIuJ,MAAMlJ,IAAN,CAAW+M,MAAX,CAAJ,EAAwB;AACtB,WAAOA,MAAP;AACD;;AAEDA,WAAS,IAAT;AACA,OAAK,IAAInJ,IAAI,CAAb,EAAgBA,IAAIsF,MAAMC,GAAN,CAAUjF,MAA9B,EAAsC,EAAEN,CAAxC,EAA2C;AACzC,QAAIoJ,cAAc9D,MAAMC,GAAN,CAAUvF,CAAV,CAAlB;;AAEAoJ,gBAAYN,OAAZ,CAAoB,UAAUO,UAAV,EAAsB;AACxC;AACA,UAAIC,UAAU,IAAIvN,MAAJ,CAAWsN,WAAW5E,MAAX,CAAkBvE,OAA7B,CAAd;AACA,cAAQmJ,WAAW1E,QAAnB;AACE,aAAK,GAAL;AACE,cAAI2E,QAAQhI,UAAR,CAAmBhB,MAAnB,KAA8B,CAAlC,EAAqC;AACnCgJ,oBAAQjI,KAAR;AACD,WAFD,MAEO;AACLiI,oBAAQhI,UAAR,CAAmBoB,IAAnB,CAAwB,CAAxB;AACD;AACD4G,kBAAQpI,GAAR,GAAcoI,QAAQ1H,MAAR,EAAd;AACA;AACF,aAAK,EAAL;AACA,aAAK,IAAL;AACE,cAAI,CAACuH,MAAD,IAAWpF,GAAGoF,MAAH,EAAWG,OAAX,CAAf,EAAoC;AAClCH,qBAASG,OAAT;AACD;AACD;AACF,aAAK,GAAL;AACA,aAAK,IAAL;AACE;AACA;AACF;AACA;AACE,gBAAM,IAAI1G,KAAJ,CAAU,2BAA2ByG,WAAW1E,QAAhD,CAAN;AArBJ;AAuBD,KA1BD;AA2BD;;AAED,MAAIwE,UAAU7D,MAAMlJ,IAAN,CAAW+M,MAAX,CAAd,EAAkC;AAChC,WAAOA,MAAP;AACD;;AAED,SAAO,IAAP;AACD;;AAEDtN,QAAQ0N,UAAR,GAAqBA,UAArB;AACA,SAASA,UAAT,CAAqBjE,KAArB,EAA4BnF,OAA5B,EAAqC;AACnC,MAAI;AACF;AACA;AACA,WAAO,IAAI2E,KAAJ,CAAUQ,KAAV,EAAiBnF,OAAjB,EAA0BmF,KAA1B,IAAmC,GAA1C;AACD,GAJD,CAIE,OAAO9E,EAAP,EAAW;AACX,WAAO,IAAP;AACD;AACF;;AAED;AACA3E,QAAQ2N,GAAR,GAAcA,GAAd;AACA,SAASA,GAAT,CAActJ,OAAd,EAAuBoF,KAAvB,EAA8BnF,OAA9B,EAAuC;AACrC,SAAOsJ,QAAQvJ,OAAR,EAAiBoF,KAAjB,EAAwB,GAAxB,EAA6BnF,OAA7B,CAAP;AACD;;AAED;AACAtE,QAAQ6N,GAAR,GAAcA,GAAd;AACA,SAASA,GAAT,CAAcxJ,OAAd,EAAuBoF,KAAvB,EAA8BnF,OAA9B,EAAuC;AACrC,SAAOsJ,QAAQvJ,OAAR,EAAiBoF,KAAjB,EAAwB,GAAxB,EAA6BnF,OAA7B,CAAP;AACD;;AAEDtE,QAAQ4N,OAAR,GAAkBA,OAAlB;AACA,SAASA,OAAT,CAAkBvJ,OAAlB,EAA2BoF,KAA3B,EAAkCqE,IAAlC,EAAwCxJ,OAAxC,EAAiD;AAC/CD,YAAU,IAAInE,MAAJ,CAAWmE,OAAX,EAAoBC,OAApB,CAAV;AACAmF,UAAQ,IAAIR,KAAJ,CAAUQ,KAAV,EAAiBnF,OAAjB,CAAR;;AAEA,MAAIyJ,IAAJ,EAAUC,KAAV,EAAiBC,IAAjB,EAAuBvF,IAAvB,EAA6BwF,KAA7B;AACA,UAAQJ,IAAR;AACE,SAAK,GAAL;AACEC,aAAO7F,EAAP;AACA8F,cAAQ1F,GAAR;AACA2F,aAAO9F,EAAP;AACAO,aAAO,GAAP;AACAwF,cAAQ,IAAR;AACA;AACF,SAAK,GAAL;AACEH,aAAO5F,EAAP;AACA6F,cAAQ3F,GAAR;AACA4F,aAAO/F,EAAP;AACAQ,aAAO,GAAP;AACAwF,cAAQ,IAAR;AACA;AACF;AACE,YAAM,IAAIhJ,SAAJ,CAAc,uCAAd,CAAN;AAhBJ;;AAmBA;AACA,MAAIgE,UAAU7E,OAAV,EAAmBoF,KAAnB,EAA0BnF,OAA1B,CAAJ,EAAwC;AACtC,WAAO,KAAP;AACD;;AAED;AACA;;AAEA,OAAK,IAAIH,IAAI,CAAb,EAAgBA,IAAIsF,MAAMC,GAAN,CAAUjF,MAA9B,EAAsC,EAAEN,CAAxC,EAA2C;AACzC,QAAIoJ,cAAc9D,MAAMC,GAAN,CAAUvF,CAAV,CAAlB;;AAEA,QAAIgK,OAAO,IAAX;AACA,QAAIC,MAAM,IAAV;;AAEAb,gBAAYN,OAAZ,CAAoB,UAAUO,UAAV,EAAsB;AACxC,UAAIA,WAAW5E,MAAX,KAAsBC,GAA1B,EAA+B;AAC7B2E,qBAAa,IAAI/E,UAAJ,CAAe,SAAf,CAAb;AACD;AACD0F,aAAOA,QAAQX,UAAf;AACAY,YAAMA,OAAOZ,UAAb;AACA,UAAIO,KAAKP,WAAW5E,MAAhB,EAAwBuF,KAAKvF,MAA7B,EAAqCtE,OAArC,CAAJ,EAAmD;AACjD6J,eAAOX,UAAP;AACD,OAFD,MAEO,IAAIS,KAAKT,WAAW5E,MAAhB,EAAwBwF,IAAIxF,MAA5B,EAAoCtE,OAApC,CAAJ,EAAkD;AACvD8J,cAAMZ,UAAN;AACD;AACF,KAXD;;AAaA;AACA;AACA,QAAIW,KAAKrF,QAAL,KAAkBJ,IAAlB,IAA0ByF,KAAKrF,QAAL,KAAkBoF,KAAhD,EAAuD;AACrD,aAAO,KAAP;AACD;;AAED;AACA;AACA,QAAI,CAAC,CAACE,IAAItF,QAAL,IAAiBsF,IAAItF,QAAJ,KAAiBJ,IAAnC,KACAsF,MAAM3J,OAAN,EAAe+J,IAAIxF,MAAnB,CADJ,EACgC;AAC9B,aAAO,KAAP;AACD,KAHD,MAGO,IAAIwF,IAAItF,QAAJ,KAAiBoF,KAAjB,IAA0BD,KAAK5J,OAAL,EAAc+J,IAAIxF,MAAlB,CAA9B,EAAyD;AAC9D,aAAO,KAAP;AACD;AACF;AACD,SAAO,IAAP;AACD;;AAED5I,QAAQyF,UAAR,GAAqBA,UAArB;AACA,SAASA,UAAT,CAAqBpB,OAArB,EAA8BC,OAA9B,EAAuC;AACrC,MAAI+J,SAASjK,MAAMC,OAAN,EAAeC,OAAf,CAAb;AACA,SAAQ+J,UAAUA,OAAO5I,UAAP,CAAkBhB,MAA7B,GAAuC4J,OAAO5I,UAA9C,GAA2D,IAAlE;AACD;;AAEDzF,QAAQ+I,UAAR,GAAqBA,UAArB;AACA,SAASA,UAAT,CAAqBuF,EAArB,EAAyBC,EAAzB,EAA6BjK,OAA7B,EAAsC;AACpCgK,OAAK,IAAIrF,KAAJ,CAAUqF,EAAV,EAAchK,OAAd,CAAL;AACAiK,OAAK,IAAItF,KAAJ,CAAUsF,EAAV,EAAcjK,OAAd,CAAL;AACA,SAAOgK,GAAGvF,UAAH,CAAcwF,EAAd,CAAP;AACD;;AAEDvO,QAAQwO,MAAR,GAAiBA,MAAjB;AACA,SAASA,MAAT,CAAiBnK,OAAjB,EAA0B;AACxB,MAAIA,mBAAmBnE,MAAvB,EAA+B;AAC7B,WAAOmE,OAAP;AACD;;AAED,MAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,WAAO,IAAP;AACD;;AAED,MAAIe,QAAQf,QAAQe,KAAR,CAAc7D,GAAGyB,MAAH,CAAd,CAAZ;;AAEA,MAAIoC,SAAS,IAAb,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,SAAOhB,MAAMgB,MAAM,CAAN,IACX,GADW,IACJA,MAAM,CAAN,KAAY,GADR,IAEX,GAFW,IAEJA,MAAM,CAAN,KAAY,GAFR,CAAN,CAAP;AAGD","file":"semver.js","sourcesContent":["exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar src = exports.src = []\nvar R = 0\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\nvar NUMERICIDENTIFIERLOOSE = R++\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')'\n\nvar MAINVERSIONLOOSE = R++\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')'\n\nvar PRERELEASEIDENTIFIERLOOSE = R++\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))'\n\nvar PRERELEASELOOSE = R++\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?'\n\nsrc[FULL] = '^' + FULLPLAIN + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?'\n\nvar LOOSE = R++\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$'\n\nvar GTLT = R++\nsrc[GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\nvar XRANGEIDENTIFIER = R++\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\nvar XRANGEPLAIN = R++\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?'\n\nvar XRANGEPLAINLOOSE = R++\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?'\n\nvar XRANGE = R++\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$'\nvar XRANGELOOSE = R++\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++\nsrc[COERCE] = '(?:^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++\nsrc[LONETILDE] = '(?:~>?)'\n\nvar TILDETRIM = R++\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+'\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g')\nvar tildeTrimReplace = '$1~'\n\nvar TILDE = R++\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$'\nvar TILDELOOSE = R++\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++\nsrc[LONECARET] = '(?:\\\\^)'\n\nvar CARETTRIM = R++\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+'\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g')\nvar caretTrimReplace = '$1^'\n\nvar CARET = R++\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$'\nvar CARETLOOSE = R++\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$'\nvar COMPARATOR = R++\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\nvar HYPHENRANGELOOSE = R++\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? re[LOOSE] : re[FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compare(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.rcompare(a, b, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1]\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options)\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  range = range.trim()\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, re[COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return thisComparators.every(function (thisComparator) {\n      return range.set.some(function (rangeComparators) {\n        return rangeComparators.every(function (rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options)\n        })\n      })\n    })\n  })\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? re[TILDELOOSE] : re[TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? re[CARETLOOSE] : re[CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '')\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options)\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  var match = version.match(re[COERCE])\n\n  if (match == null) {\n    return null\n  }\n\n  return parse(match[1] +\n    '.' + (match[2] || '0') +\n    '.' + (match[3] || '0'))\n}\n"]}