{"version":3,"sources":["../../2 - closure/example1.js"],"names":["numGenerator","num","console","log","getNum"],"mappings":";;AAAA,SAASA,YAAT,GAAuB;AACnB,QAAIC,MAAM,CAAV;AACA,WAAO,YAAM;AACTA;AACAC,gBAAQC,GAAR,CAAYF,GAAZ;AACH,KAHD;AAIH;;AAED,IAAIG,SAASJ,cAAb,C,CAA4B;AAC5BI,S,CAAS;AACTA,S,CAAS;AACTA,S,CAAS","file":"example1.js","sourcesContent":["function numGenerator(){\r\n    let num = 1\r\n    return () => {\r\n        num ++\r\n        console.log(num)\r\n    }\r\n}\r\n\r\nvar getNum = numGenerator() // 闭包简单理解就是： 1 - 在内层函数中引用了外层函数作用域下的变量 2 - 内层函数在全局环境下可访问\r\ngetNum() //输出2\r\ngetNum() //输出3\r\ngetNum() //输出4\r\n"]}